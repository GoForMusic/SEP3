@page "/PostCreation"
@using Entities.Models
@using Contracts
@using Entities.Models
@using Entities.Models
@using System.Text.Encodings.Web
@using System.Security.Claims
@inject IPostService _postService;
@inject IUserService _UserService;


@inject NavigationManager navMgr

<br/>
<br/>
<br/>   

@if (allCategories is null) {
    <p> Loading.....</p>
}
else
{
    
    <br/>
    <br/>
    
    

 <!-- <select class="form-select form-select-lg mb-3" id="category" aria-label=".form-select-lg example">
    <option selected>Choose category</option>
    @foreach (var category in allCategories)
    {
      @if (category.Subcategories == null || category.Subcategories.Count == 0)
      {
        <option>@category.Name</option>
      }
      else
      {
        @foreach (var sub in category.Subcategories)
        {
          <option>@sub.Name</option>
        }
      }
    }
  </select> -->
  
  <br/>
  <br/>
  
  <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
          <div class="container bootstrap snippets bootdeys">
          <div class="row">
            <div class="col-xs-12 col-sm-9">
              <form class="form-horizontal">
                  <div class="panel panel-default">
                    <div class="panel-body text-center">
                    </div>
                  </div>
                <div class="panel panel-default">
                  <div class="panel-heading">
                  <h4 class="panel-title"style="color:white" >Post info</h4>
                  </div>
                  <div class="panel-body">
                    <div class="form-group">
                      
                      <div class="col-sm-10">
                       <select class="form-select form-select-lg mb-3" @bind="test" name="category" aria-label=".form-select-lg example">
                           <option selected>Choose category</option>
                           @foreach (var category in allCategories)
                           {
                             _subcategories.AddRange(category.Subcategories);
                             
                               @foreach (var sub in category.Subcategories)
                               {
                                 <option>@sub.Name</option>
                               }
                             
                           }
                         </select> 
                      </div>
                    </div>
                    <div class="form-group">
                      <label class="col-sm-2 control-label" style="color:white" @bind="post.Description" >Description</label>
                      <div class="col-sm-10">
                        <input type="text" class="form-control">
                      </div>
                    </div>
                    <div class="form-group">
                      <label class="col-sm-2 control-label" style="color:white" @bind="post.Title">Title</label>
                      <div class="col-sm-10">
                        <input type="text" class="form-control">
                      </div>
                    </div>
                    <div class="form-group">
                      <label class="col-sm-2 control-label" style="color:white" @bind="post.Condition">Condition</label>
                      <div class="col-sm-10">
                        <input type="text" class="form-control">
                      </div>
                    </div>
                    <div class="form-group">
                      <label class="col-sm-2 control-label" style="color:white" @bind="post.Email" >E-mail address</label>
                      <div class="col-sm-10">
                        <input type="email" class="form-control">
                                          </div>
                                        </div>
                  </div>
                </div>
          
                <div class="panel panel-default">
                  
                  <div class="panel-body">
                    
                    <div class="form-group">
                      <label class="col-sm-2 control-label" style="color:white" @bind="post.PhoneNumber" >Mobile number</label>
                      <div class="col-sm-10">
                        <input type="tel" class="form-control">
                      </div>
                    </div>
                    <div class="form-group">
                      <div class="col-sm-10 col-sm-offset-2">
                        <button type="submit" class="btn btn-primary" @onclick="CreatePost">Submit</button>
                        <button type="reset" class="btn btn-default">Cancel</button>
                      </div>
                    </div>
                  </div>
                  </div>
              </form>
            </div>
          </div>
          </div>
          
          
          
          }
          <!--   <option value="2">Two</option>
<option value="3">Three</option>
-->
 

    @code {

      [CascadingParameter]
      public Task<AuthenticationState> AuthState { get; set; } = null!;
      
      private User? _user = new User();
      private Post post = new Post();
        private List<Category>? allCategories = new List<Category>();
        private List<Subcategory> _subcategories = new List<Subcategory>();
      

    protected async override Task OnInitializedAsync()
    {
        allCategories = await _postService.GetALlCategoriesAsync();
      try
      {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
      //get user clas base on the user identity
          _user = await _UserService.GetUserAsync(user.Identity.Name);
        }
      }
      catch (Exception e)
      {
      }
    }


        private async Task Foo()
        {
        //   string strDDLValue = Request.Form["ddlVendor"].ToString();
        }

      private string test = String.Empty;
      
      
      private async Task CreatePost()
      {
        int localId = 0;
        foreach (var item in _subcategories)
        {
          
          if (item.Name.Equals(test))
          {
            localId = item.Id;
          }
          
        }
        
        post.DateCreated = DateTime.Now;
        post.Images = new List<Image>();
        post.Writer = _user;
        Post localTest = await  _postService.AddPostAsync(localId, post);

        Console.WriteLine(localTest.Description);
      }

    }

}