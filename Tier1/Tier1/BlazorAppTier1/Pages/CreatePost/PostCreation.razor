@page "/PostCreation"
@using Entities.Models
@using Contracts
@using Entities.Models
@using Entities.Models
@using System.Text.Encodings.Web
@using System.Security.Claims
@using System.Net.Http.Headers
@using System.Text.Json
@using HttpServices
@using Microsoft.AspNetCore.Components.Web.Infrastructure
@inject IPostService _postService;
@inject IUserService _UserService;


@inject NavigationManager navMgr

@attribute [Authorize]

/>
<br/>
<br/>

@if (allCategories is null)
{
    <p> Loading.....</p>
}
else
{
    <br/>
    <br/>


    <!-- <select class="form-select form-select-lg mb-3" id="category" aria-label=".form-select-lg example">
        <option selected>Choose category</option>
        @foreach (var category in allCategories)
        {
            @if (category.Subcategories == null || category.Subcategories.Count == 0)
            {
                <option>@category.Name</option>
            }
            else
            {
                @foreach (var sub in category.Subcategories)
                {
                    <option>@sub.Name</option>
                }
            }
        }
    </select> -->


    <div class="container bootstrap snippets bootdeys body">
        <div class="row">
            <div class="col-md-12 col-sm-9">
                <form class="form-horizontal">
                    <div class="panel panel-default">
                        <div class="panel-body text-center">

                            <div class="container">
                                <div class="row justify-content-center text-center mb-4">
                                    <div class="col-xl-6 col-lg-8 col-sm-10">
                                        <h2 class="font-weight-bold">One man's trash<br> is another man's treasure </h2>
                                        <p class="text-muted mb-0">We bring the products and services while helping you achieve cost and time savings.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-default" style="margin-left: 20%">
                        <div class="panel-heading">
                            <h4 class="panel-title"style="color:white">Post info</h4>
                        </div>
                        <div class="panel-body">
                            <div class="form-group">

                                <div class="col-sm-10">
                                    <select class="form-select form-select-lg mb-3" @bind="subCategory" name="category" aria-label=".form-select-lg example" style="max-width: 70%">
                                        <option selected >Choose category</option>
                                        @foreach (var category in allCategories)
                                        {
                                            _subcategories.AddRange(category.Subcategories);

                                            @foreach (var sub in category.Subcategories)
                                            {
                                                <option>@sub.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>


                            <div class="form-group">
                                <label id="name" class="col-sm-2 control-label" style="color:white">Title</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" @bind="post.Title" required style="max-width: 70%">
                                </div>
                            </div>
                            <br/>
                            <br/>
                            <div class="container">
                                <div class="col-md-7">
                                    <div class="well">
                                        <form accept-charset="UTF-8" action="" method="POST">
                                            <label> Description about you Service/Product</label>
                                            <textarea class="form-control" @bind="post.Description" id="text" name="text" placeholder="Description" rows="5"  ></textarea>
                                            <br/>
                                            <h6 class="pull-right" id="count_message" style="color:white"></h6>

                                        </form>
                                    </div>
                                </div>
                            </div>
                            <br/>

                            <br/>

                            <div class="form-group">

                                <label class="col-sm-2 control-label" style="color:white">Condition</label>
                                @* <div class="col-sm-10"> *@
                                @* <input type="text" class="form-control" @bind="post.Condition"> *@
                                @* </div> *@

                                <select class="form-select" @bind="post.Condition" name="category" aria-label=".form-select example" style="max-width: 58%">
                                    <option selected>Choose Condition</option>
                                    @foreach (var condition in conditions)
                                    {
                                        <option>@condition</option>
                                                                               
                                    }
                                </select>
                            </div>
                            
                        </div>
                        <br/>
                        <div class="form-group">
                            <label class="col-sm-2 control-label" style="color:white">E-mail address</label>
                            <div class="col-sm-10">
                                <input type="email" class="form-control" @bind="post.Email" style="max-width: 70%">
                            </div>
                        </div>
                  
                    
                    <div class="panel panel-default">
                        <br/>


                        <div class="panel-body">

                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="color:white">Mobile number</label>
                                <div class="col-sm-10">
                                    <input type="tel" class="form-control" @bind="post.PhoneNumber" style="max-width: 70%">
                                </div>
                            </div>
                              <div class="form-group" style="margin-top: 5px">
                                                            <label class="col-sm-2 control-label" style="color:white">Address</label>
                                                            <div class="col-sm-10">
                                                                <input type="tel" class="form-control" @bind="post.Address" style="max-width: 70%;margin-top: 2px">
                                                            </div>
                                                        </div>
                            <br/>

                            <div>
                                <InputFile OnChange="@OnInputFileChange"> Upload Image </InputFile>
                            </div>

                            <div class="form-group">
                                <div class="col-sm-10 col-sm-offset-2">
                                    <button type="button" class="btn btn-primary" onclick="@CreatePost" style="margin-top: 12px" >Submit</button>

                                </div>
                            </div>
                        </div>
                    </div>
                      </div>
                </form>
                <div style="color: red; margin: 10px;">
                 @if (!string.IsNullOrEmpty(errorLabel)) {
                                            <div class="errorPrompt">
                                                <label> @errorLabel</label>
                                            </div>
                                        }
                 </div>
            </div>
        </div>
    </div>
}
<!--   <option value="2">Two</option>
<option value="3">Three</option>
-->


@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private User? _user = new User();
    private Post post = new Post();
    private List<Category>? allCategories = new List<Category>();
    private List<Subcategory> _subcategories = new List<Subcategory>();

    private string subCategory;
    public IBrowserFile? file;

    private string errorLabel = String.Empty;


    private IList<string> conditions = new List<string>()
    {
        "New","Used","Rarely Used"
    };
    

    
    // At the start of program 
    protected override async Task OnInitializedAsync()
    {
        try
        {
            allCategories = await _postService.GetALlCategoriesAsync();
            AuthenticationState authState = await AuthState;
            ClaimsPrincipal user = authState.User;
            if (user.Identity.IsAuthenticated)
            {
    //get user clas base on the user identity
                _user = await _UserService.GetUserAsync(user.Identity.Name);
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }




    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        file = e.File;
        Console.WriteLine(file.Name);
    }

    private async Task CreatePost()
    {
        try
        {
            int localId = 0;
            foreach (var item in _subcategories)
            {
                if (item.Name.Equals(subCategory))
                {
                    localId = item.Id;
                }
            }

            DateTime today = DateTime.Today;
            post.DateCreated = new Date()
            {
                Day = today.Day,
                Month = today.Month,
                Year = today.Year
            };
            post.Images = new List<Image>();
            post.Writer = _user;

            if (post.Address == null)
            {
                post.Address = "Address not provided";
            }



    // Without image
            if (file == null)
            {
                Post localTest = await _postService.AddPostAsync(localId, post);
                Console.WriteLine("File is null");

                Console.WriteLine(localTest.Description);
            }

    // adding image function
            if (file != null)
            {
                using (var form = new MultipartFormDataContent())
                {
                    using (var fs = file.OpenReadStream())
                    {
                        using (var streamContent = new StreamContent(fs))
                        {
                            using (var fileContent = new ByteArrayContent(await streamContent.ReadAsByteArrayAsync()))
                            {
                                fileContent.Headers.ContentType = MediaTypeHeaderValue.Parse("multipart/form-data");

                                form.Add(fileContent, "file", file.Name);

                                Post localTest = await _postService.AddPostAsync(localId, post, form);
                                Console.WriteLine(localTest.Description);
                            }
                        }
                    }



                }
            }
            file = null;
            navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorLabel = "One or more field are empty";
            Console.WriteLine(e.Message);
            if (file.Size > 512000)
            {
                errorLabel = "File size is greater than we support ";
            }
        }



    }

}