@namespace BlazorAppTier1.Pages.UIElements
@using Entities.Models
@using BlazorAppTier1.Pages.PostPage
@using Contracts
@using System.Runtime.CompilerServices
@inject IPostService _postService


<div class="container emp-profile">
    <form method="post">
        <div class="row">
            <div class="col-md-6">
                <div class="profile-head">
                    <h5>
                        @User.GetName()
                    </h5>
                    <h6>
                        @User.Username
                    </h6>
                    <p class="profile-rating">RANKINGS : <span>8/10</span></p>
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">About</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">All posts</a>
                        </li>
                    </ul>
                </div>
            </div>
            <AuthorizeView>
                <Authorized>
                    @if (context.User.Identity!.Name!.Equals(User.Username)) {
                        <div class="col-md-2">
                            <input type="submit" class="profile-edit-btn" name="btnAddMore" value="Edit Profile"/>
                        </div>
                    }
                </Authorized>
            </AuthorizeView>

        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="tab-content profile-tab" id="myTabContent">
                    <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                        <div class="row">
                            <div class="col-md-6">
                                <label>User name </label>
                            </div>
                            <div class="col-md-6">
                                <p>@User.Username</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>First name</label>
                            </div>
                            <div class="col-md-6">
                                <p>@User.FirstName</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>Last name</label>
                            </div>
                            <div class="col-md-6">
                                <p>@User.LastName</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>Total active posts :</label>
                            </div>
                            <div class="col-md-6">
                                <p> @_totalNumberOfPosts</p>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                        @if (_postsToShow == null) {
                            <LoadingComponent message=" posts. Please wait.."></LoadingComponent>
                        }
                        else {
                            <PostList postToShow="_postsToShow"></PostList>
                        }

                    </div>
                </div>
            </div>
        </div>
    </form>
</div>    
@if (!(string.IsNullOrEmpty(_errorLabel))) {
    <Modal>
        <p> @_errorLabel</p>
        <button @onclick="Proceed"> Okay</button>
    </Modal> 
}


@code {

    [Parameter]
    public User User { get; set; }

    private List<Post>? _postsToShow;
    private int _totalNumberOfPosts;
    private string? _errorLabel;
    


    protected override async Task OnInitializedAsync() {
        try {
            await GetTotalNumberOfPostByUsername();
            await GetAllPostsByUsername();
        }
        catch (Exception e) {
            _errorLabel = e.Message;
            
        }
    }


    private async Task GetTotalNumberOfPostByUsername() {
        _totalNumberOfPosts = await _postService.GetTotalNumberOfPostsByUsername(User.Username);
    }

    private async Task GetAllPostsByUsername() {
        _postsToShow = await _postService.GetAllPostsByUsername(User.Username);
    }

    private void Proceed() {
        _errorLabel = string.Empty;
    }

}