@using Entities.Models
@namespace BlazorAppTier1.Pages.UIElements 

@if (CommentsToShow == null || !CommentsToShow.Any()) {
    <p> No comments yet...</p>
}
else {
    <div id="body" class="container">
        <div class="row">
            @foreach (var comment in CommentsToShow) {
                <div class="col-md-8">
                    <div class="media g-mb-30 media-comment">
                        <div class="media-body u-shadow-v18 g-bg-secondary g-pa-30">
                            <div class="g-mb-15">
                                <h5 class="h5 mb-0 fullname " @onclick="@(() => PressedUser.InvokeAsync(comment.Writer.Username))">@comment.Writer.FirstName @comment.Writer.LastName</h5>
                                <span class=" g-font-size-12">@comment.DateCreated.GetDate()</span>
                            </div>

                            <p>
                                @comment.Body
                            </p>

                            <ul class="list-inline d-sm-flex my-0">
                                <li class="list-inline-item g-mr-20">
                                    <a class="u-link-v5  g-color-primary--hover" href="#!">
                                        <i class="fa fa-thumbs-up g-pos-rel g-top-1 g-mr-3"></i>
                                        178
                                    </a>
                                </li>
                                <li class="list-inline-item g-mr-20">
                                    <a class="u-link-v5 g g-color-primary--hover" href="#!">
                                        <i class="fa fa-thumbs-down g-pos-rel g-top-1 g-mr-3"></i>
                                        34
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
}




@code {

    [Parameter]
    public List<Comment>? CommentsToShow { get; set; }

    // Just to make that when someone presses the user. it redirects to the profile of that user.
    // for later purposes
    [Parameter]
    public EventCallback<string> PressedUser { get; set; }


}