@page "/SendMessage" 
@using Entities.Models
@using Contracts
@inject IMessageService _messageService;

<div class="card">
    <h3>Send Message</h3>
    <div class="field">
        <label> Id :</label>
        <EditForm Model="message">
            <InputNumber @bind-Value="message.Id"/>
        </EditForm>

    </div>
    <div class="field">
        <label> Message :</label>
        <input type="text" @bind="message.Body"/>
    </div>
    @if (!string.IsNullOrEmpty(errorlabel)) {
        <div class="field">
            <label> @errorlabel</label>
        </div>
    }
    <div class="field">
        <button class="loginbtn" @onclick="SendAsync"> Send Message</button>
    </div>
</div>

@code {
    private Message message = new Message();
    private string errorlabel = string.Empty;

    private async Task SendAsync() {
        try {
            Message messageFromServer = await _messageService.SendMessageAsync(message);
            errorlabel = $"Message sent, server returned : {messageFromServer.Body}";
        }
        catch (Exception e) {
            errorlabel = $"Error : {e.Message}";
        }
    }

}